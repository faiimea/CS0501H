#include <iostream>
using namespace std;
const int maxn = 3005;
int m, n;
int c[maxn << 1][maxn << 1];
int lowbit(int x)
{
    return x & (-x);
}
void add(int x, int y, int z)
{
    int mx = x;
    while (y <= m+n)
    {
        x = mx;
        while (x <= m+n)
        {
            c[x][y] += z;
            x += lowbit(x);
        }
        y += lowbit(y);
    }
}
int ask(int x, int y)
{
    int res = 0;
    int mx = x;
    while (y)
    {
        x = mx;
        while (x)
        {
            res += c[x][y];
            x -= lowbit(x);
        }
        y -= lowbit(y);
    }
    return res;
}
inline int read() {                 // read in a int and return
    char ch = getchar();
    int x = 0, f = 1;
    while (ch < '0' || ch > '9')
    {
        if (ch == '-') f = -1;
        ch = getchar();
    }
    while ('0' <= ch && ch <= '9')
    {
        x = x * 10 + ch - '0';
        ch = getchar();
    }
    return x * f;
}

int main()
{
    m = read();
    n = read();
    int tmp;
    for (int j = 1;j <= n;++j)
        for (int i = 1;i <= m;++i)
        {
            tmp = read();
            add(i + j, i + n - j, tmp);
        }
    int mod;
    int x0, y0, t;
    int x, y;
    int x1, x2,y1,y2;
    int res;
    while (scanf("%d",&mod) != EOF)
    {
        x0 = read();y0 = read();t = read();
        x = x0 + y0;
        y = x0 + n - y0;
        if (mod == 1)
        {
            add(x, y, t);
        }
        else
        {
            x1 = x - t;
            x2 = x + t;
            y1 = y - t;
            y2 = y + t;
            res = ask(x2, y2) - ask(x1 - 1, y2) - ask(x2, y1 - 1) + ask(x1 - 1, y1 - 1);
            printf("%d\n", res);
        }
    }
    return 0;
}
