#define _CRT_SECURE_NO_WARNINGS
#pragma warning(disable:4996)
#include <iostream>
#include <algorithm>
using namespace std;
const int maxn = 2e4 + 10;
const int maxm = 1e5 + 10;
int e[maxn];
int n[maxn];
int N, M;
struct lin
{
	int A;
	int B;
	int C;
};
lin ori[maxm];

bool cmp(lin a, lin b)
{
	return a.C > b.C;
}


int find(int x)
{
	if (e[x] == x)	return x;
	return e[x] = find(e[x]);
}

bool query(int x, int y)
{
	int fx = find(x);
	int fy = find(y);
	return (fx == fy);
}

void uni(int x, int y)
{
	int fx = find(x);
	int fy = find(y);
	if (fx == fy)	return;
	e[fx] = fy;
	return;
}

int main()
{
	cin >> N >> M;
	int a ;int b;int c;
	int num;num = 0;
	for (int i = 0;i < maxn;++i)	e[i] = i;
	for (int i = 0;i < M;++i)
	{
		cin >> a >> b >> c;
		ori[i].A = a;
		ori[i].B = b;
		ori[i].C = c;
		++num;
	}
	sort(ori, ori + num, cmp);
	for (int i = 0;i < M;++i)
	{
		a = ori[i].A;
		b = ori[i].B;
		c = ori[i].C;
		if (n[a] == 0)	n[a] = b;
		if (n[b] == 0)	n[b] = a;
		if (query(a, b)) 
		{ 
			cout << c;
			return 0; 
		}
		else
		{
			uni(a, n[b]);
			uni(b, n[a]);
		}
	}
	cout << "0";
}
