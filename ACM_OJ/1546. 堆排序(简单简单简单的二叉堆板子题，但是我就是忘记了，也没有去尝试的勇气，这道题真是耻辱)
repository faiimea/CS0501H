#include<iostream>
using namespace std;
const int maxn = 1e5+10;
int ori[maxn];
int res[maxn];
int a[maxn];
int s=0;
int n;

void enq(int x)
{
    int hole = ++s;
    for (;hole > 1 && x > a[hole / 2];hole /= 2)
        a[hole] = a[hole / 2];
    a[hole] = x;
}

int pop()
{
    int b = a[1];
    int t = a[s];
    a[s] = 0;
    a[1] = t;
    s--;
    int h = 1;
    int c=0;
    int tmp = a[h];
    for (;h * 2 <= s;h = c)
    {
        c = h * 2;
        if (c != s && a[c + 1] > a[c])   c++;
        if (a[c] > tmp)    a[h] = a[c];
        else break;
    }
    a[h] = tmp;
    return b;
    
}

inline int read() {                 // read in a int and return
    char ch = getchar();
    int x = 0, f = 1;
    while (ch < '0' || ch > '9')
    {
        if (ch == '-') f = -1;
        ch = getchar();
    }
    while ('0' <= ch && ch <= '9')
    {
        x = x * 10 + ch - '0';
        ch = getchar();
    }
    return x * f;
}

int main()
{
    n = read();
    for (int i = 0;i < n;++i)
    {
        ori[i] = read();
        enq(ori[i]);
    }
    for (int i = 1;i <= n;++i)
        cout << a[i]<<" ";
    cout << endl;
    for (int i = n - 1;i >= 0;--i)
        res[i] = pop();
    for (int i = 0;i < n;++i)
        cout << res[i] << " ";

}
